{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/hadilaasi/stpe_project/stpe/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nclass WordCount extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: null\n    };\n    this.handleKeypress = this.handleKeypress.bind(this);\n  }\n\n  handleKeypress(event) {\n    console.log('*****', event.target.value);\n    this.setState({\n      value: event.target.value\n    });\n  }\n\n  render() {\n    let count = 0,\n        length = this.state.value ? this.state.value.length : 0;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        onChange: event => this.handleKeypress(event),\n        children: this.state.value\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Count: \", length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"this.state.value: \", this.state.value]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nReactDOM.render( /*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 35,\n  columnNumber: 3\n}, this), document.getElementById('root')); // If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\nreportWebVitals();","map":{"version":3,"sources":["/Users/hadilaasi/stpe_project/stpe/src/index.js"],"names":["React","ReactDOM","App","reportWebVitals","WordCount","Component","constructor","props","state","value","handleKeypress","bind","event","console","log","target","setState","render","count","length","document","getElementById"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;;AAEA,MAAMC,SAAN,SAAwBJ,KAAK,CAACK,SAA9B,CAAwC;AACtCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAG;AADG,KAAb;AAGA,SAAKC,cAAL,GAAsB,KAAKA,cAAL,CAAoBC,IAApB,CAAyB,IAAzB,CAAtB;AACD;;AAEDD,EAAAA,cAAc,CAACE,KAAD,EAAQ;AACpBC,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBF,KAAK,CAACG,MAAN,CAAaN,KAAlC;AACA,SAAKO,QAAL,CAAc;AAAEP,MAAAA,KAAK,EAACG,KAAK,CAACG,MAAN,CAAaN;AAArB,KAAd;AACD;;AAEDQ,EAAAA,MAAM,GAAE;AACN,QAAIC,KAAK,GAAG,CAAZ;AAAA,QACIC,MAAM,GAAG,KAAKX,KAAL,CAAWC,KAAX,GAAiB,KAAKD,KAAL,CAAWC,KAAX,CAAiBU,MAAlC,GAAyC,CADtD;AAEA,wBACE;AAAA,8BACE;AAAU,QAAA,QAAQ,EAAGP,KAAD,IAAS,KAAKF,cAAL,CAAoBE,KAApB,CAA7B;AAAA,kBAA0D,KAAKJ,KAAL,CAAWC;AAArE;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,8BAAaU,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAA,yCAAwB,KAAKX,KAAL,CAAWC,KAAnC;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAOD;;AAxBqC;;AA2BxCR,QAAQ,CAACgB,MAAT,eACE,QAAC,KAAD,CAAO,UAAP;AAAA,yBACE,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,QADF,EAIEG,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAJF,E,CAOA;AACA;AACA;;AACAlB,eAAe","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nclass WordCount extends React.Component {\n  constructor(props) { \n    super(props);\n    this.state = {\n      value : null\n    }\n    this.handleKeypress = this.handleKeypress.bind(this);\n  }\n  \n  handleKeypress(event) {\n    console.log('*****', event.target.value);\n    this.setState({ value:event.target.value });\n  }\n  \n  render(){\n    let count = 0,\n        length = this.state.value?this.state.value.length:0;\n    return(\n      <div>\n        <textarea onChange={(event)=>this.handleKeypress(event)}>{this.state.value}</textarea>\n        <div>Count: {length}</div>\n        <div>this.state.value: {this.state.value}</div>\n      </div>\n    );\n  }\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"]},"metadata":{},"sourceType":"module"}