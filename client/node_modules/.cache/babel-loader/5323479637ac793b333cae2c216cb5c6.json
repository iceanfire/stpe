{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/hadilaasi/stpe_project/stpe/src/wordcount.js\";\nimport React, { Component } from 'react';\n\nclass WordCount extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: null\n    };\n    this.handleKeypress = this.handleKeypress.bind(this);\n    this._onFocus = this._onFocus.bind(this);\n    this._onBlur = this._onBlur.bind(this);\n    this.setValue = this.setValue.bind(this);\n    this.placeholder = \"1. Call family \\n2. Finish Stripe Assignment \\n\";\n    this.startValue = \"1. \";\n    this.textInput = /*#__PURE__*/React.createRef();\n    this.costPerLine = 1.25;\n  }\n\n  handleKeypress(event) {\n    this.setState({\n      value: event.target.value\n    });\n  }\n\n  componentDidMount() {\n    this.textInput.current.placeholder = this.placeholder;\n  }\n\n  setValue(newValue) {\n    this.textInput.current.value = newValue;\n    this.state.value = newValue;\n  }\n\n  _onFocus() {\n    if (!this.state.value) {\n      this.setValue(this.startValue);\n    }\n  }\n\n  _onBlur() {\n    if (this.state.value == this.startValue) {\n      this.setValue(\"\");\n    }\n  }\n\n  calculateLineCount(text) {\n    return text ? text.split(\"\\n\").length : 0;\n  }\n\n  render() {\n    let count = 0,\n        lineCount = this.state.value ? this.calculateLineCount(this.state.value) : 0,\n        totalCost = lineCount * this.costPerLine;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"itemsList\",\n        onChange: event => this.handleKeypress(event),\n        onFocus: this._onFocus,\n        onBlur: this._onBlur,\n        ref: this.textInput,\n        children: this.state.value\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Number of Items: \", lineCount]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Cost Per Item: \\xA3\", this.costPerLine]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Total Cost: \\xA3\", totalCost]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default WordCount;","map":{"version":3,"sources":["/Users/hadilaasi/stpe_project/stpe/src/wordcount.js"],"names":["React","Component","WordCount","constructor","props","state","value","handleKeypress","bind","_onFocus","_onBlur","setValue","placeholder","startValue","textInput","createRef","costPerLine","event","setState","target","componentDidMount","current","newValue","calculateLineCount","text","split","length","render","count","lineCount","totalCost"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAGA,MAAMC,SAAN,SAAwBF,KAAK,CAACC,SAA9B,CAAwC;AACpCE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAG;AADG,KAAb;AAGA,SAAKC,cAAL,GAAsB,KAAKA,cAAL,CAAoBC,IAApB,CAAyB,IAAzB,CAAtB;AACA,SAAKC,QAAL,GAAgB,KAAKA,QAAL,CAAcD,IAAd,CAAmB,IAAnB,CAAhB;AACA,SAAKE,OAAL,GAAe,KAAKA,OAAL,CAAaF,IAAb,CAAkB,IAAlB,CAAf;AACA,SAAKG,QAAL,GAAgB,KAAKA,QAAL,CAAcH,IAAd,CAAmB,IAAnB,CAAhB;AACA,SAAKI,WAAL,GAAmB,iDAAnB;AACA,SAAKC,UAAL,GAAkB,KAAlB;AACA,SAAKC,SAAL,gBAAiBd,KAAK,CAACe,SAAN,EAAjB;AACA,SAAKC,WAAL,GAAmB,IAAnB;AACD;;AAEDT,EAAAA,cAAc,CAACU,KAAD,EAAQ;AACpB,SAAKC,QAAL,CAAc;AAAEZ,MAAAA,KAAK,EAACW,KAAK,CAACE,MAAN,CAAab;AAArB,KAAd;AACD;;AAEDc,EAAAA,iBAAiB,GAAG;AAClB,SAAKN,SAAL,CAAeO,OAAf,CAAuBT,WAAvB,GAAqC,KAAKA,WAA1C;AACD;;AAEDD,EAAAA,QAAQ,CAACW,QAAD,EAAU;AAChB,SAAKR,SAAL,CAAeO,OAAf,CAAuBf,KAAvB,GAA+BgB,QAA/B;AACA,SAAKjB,KAAL,CAAWC,KAAX,GAAmBgB,QAAnB;AACD;;AAEDb,EAAAA,QAAQ,GAAG;AACT,QAAG,CAAC,KAAKJ,KAAL,CAAWC,KAAf,EAAqB;AACnB,WAAKK,QAAL,CAAc,KAAKE,UAAnB;AACD;AACF;;AAEDH,EAAAA,OAAO,GAAG;AACR,QAAG,KAAKL,KAAL,CAAWC,KAAX,IAAoB,KAAKO,UAA5B,EAAuC;AACrC,WAAKF,QAAL,CAAc,EAAd;AACD;AACF;;AAEDY,EAAAA,kBAAkB,CAACC,IAAD,EAAO;AACvB,WAAOA,IAAI,GAACA,IAAI,CAACC,KAAL,CAAW,IAAX,EAAiBC,MAAlB,GAAyB,CAApC;AACD;;AAEDC,EAAAA,MAAM,GAAE;AACN,QAAIC,KAAK,GAAG,CAAZ;AAAA,QACIC,SAAS,GAAG,KAAKxB,KAAL,CAAWC,KAAX,GAAiB,KAAKiB,kBAAL,CAAwB,KAAKlB,KAAL,CAAWC,KAAnC,CAAjB,GAA2D,CAD3E;AAAA,QAEIwB,SAAS,GAAGD,SAAS,GAAG,KAAKb,WAFjC;AAGA,wBACE;AAAA,8BACE;AACE,QAAA,EAAE,EAAC,WADL;AAEE,QAAA,QAAQ,EAAGC,KAAD,IAAS,KAAKV,cAAL,CAAoBU,KAApB,CAFrB;AAGE,QAAA,OAAO,EAAE,KAAKR,QAHhB;AAIE,QAAA,MAAM,EAAE,KAAKC,OAJf;AAKE,QAAA,GAAG,EAAE,KAAKI,SALZ;AAAA,kBAOG,KAAKT,KAAL,CAAWC;AAPd;AAAA;AAAA;AAAA;AAAA,cADF,eAUE;AAAA,wCAAuBuB,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA,cAVF,eAWE;AAAA,0CAAsB,KAAKb,WAA3B;AAAA;AAAA;AAAA;AAAA;AAAA,cAXF,eAYE;AAAA,uCAAmBc,SAAnB;AAAA;AAAA;AAAA;AAAA;AAAA,cAZF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAgBD;;AAjEmC;;AAoEtC,eAAe5B,SAAf","sourcesContent":["import React, { Component } from 'react';\n\n\nclass WordCount extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        value : null\n      }\n      this.handleKeypress = this.handleKeypress.bind(this);\n      this._onFocus = this._onFocus.bind(this);\n      this._onBlur = this._onBlur.bind(this);\n      this.setValue = this.setValue.bind(this);\n      this.placeholder = \"1. Call family \\n2. Finish Stripe Assignment \\n\";\n      this.startValue = \"1. \";\n      this.textInput = React.createRef();\n      this.costPerLine = 1.25;\n    }\n    \n    handleKeypress(event) {\n      this.setState({ value:event.target.value });\n    }\n\n    componentDidMount() {\n      this.textInput.current.placeholder = this.placeholder\n    }\n\n    setValue(newValue){\n      this.textInput.current.value = newValue\n      this.state.value = newValue\n    }\n\n    _onFocus() {\n      if(!this.state.value){\n        this.setValue(this.startValue);\n      }\n    }\n\n    _onBlur() {\n      if(this.state.value == this.startValue){\n        this.setValue(\"\")\n      }\n    }\n\n    calculateLineCount(text) {\n      return text?text.split(\"\\n\").length:0;\n    }\n\n    render(){\n      let count = 0,\n          lineCount = this.state.value?this.calculateLineCount(this.state.value):0,\n          totalCost = lineCount * this.costPerLine\n      return(\n        <div>\n          <textarea \n            id=\"itemsList\" \n            onChange={(event)=>this.handleKeypress(event)} \n            onFocus={this._onFocus} \n            onBlur={this._onBlur}\n            ref={this.textInput}\n          >\n            {this.state.value}\n          </textarea>\n          <div>Number of Items: {lineCount}</div>\n          <div>Cost Per Item: £{this.costPerLine}</div>\n          <div>Total Cost: £{totalCost}</div>\n        </div>\n      );\n    }\n  }\n  \n  export default WordCount"]},"metadata":{},"sourceType":"module"}